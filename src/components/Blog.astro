---
import { getCollection } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { CollectionEntry } from "astro:content";

interface BlogPost extends CollectionEntry<"blog"> {
  id: string;
  data: {
    title: string;
    description: string;
    pubDate: Date;
    icon: string;
  };
}

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const bgClasses = [
  "bg-white/10 dark:bg-black/10 rounded-xl",
  "bg-white/10 dark:bg-black/10 rounded-xl",
  "bg-white/10 dark:bg-black/10 rounded-xl",
  "bg-white/10 dark:bg-black/10 rounded-xl",
];

const getRandomClass = () => {
  return bgClasses[Math.floor(Math.random() * bgClasses.length)];
};

<section class="flex flex-col text-center gap-4 ">
  <h2 class="text-4xl font-bold text-black dark:text-white">Blog</h2>
  <p class="text-black dark:text-gray-200">Thoughts on design, code, and everything in between.</p>
  <ul class="flex flex-wrap justify-center md:justify-center gap-8 py-20 list-none">
    {
      posts.map((post) => {
        const randomClass = getRandomClass();
        return (
          <li class="w-72 text-left rounded-xl backdrop-blur-md bg-white/10 dark:bg-black/10 group transition px-4 py-6 flex flex-col gap-6">
            <a href={`/blog/${post.id}/`} class="flex flex-col gap-4">
              <h4 class="text-xl font-semibold text-black dark:text-white">{post.data.title}</h4>
              <p class="date -mt-4 text-sm font-light text-black dark:text-gray-300">
                <FormattedDate date={post.data.pubDate} />
              </p>
            </a>
            <div class="text-black dark:text-gray-200" set:html={post.data.description} />
          </li>
        );
      })
    }
  </ul>
</section>