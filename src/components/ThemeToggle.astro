---
import { FaSun, FaMoon } from "react-icons/fa6";
---

<button id="themeToggle" class="p-2 rounded-lg transition-all duration-300 relative h-8 w-8" aria-label="Toggle dark mode">
  <span class="sun-icon absolute inset-0 flex items-center justify-center transition-all duration-300">
    <FaSun size={20} />
  </span>
  <span class="moon-icon absolute inset-0 flex items-center justify-center transition-all duration-300">
    <FaMoon size={20} />
  </span>
</button>

<style>
  #themeToggle {
    background: none;
    position: relative;
    overflow: hidden;
  }
  .sun-icon, .moon-icon {
    transition: all 0.3s ease;
  }
  
  /* Animation for icon transitions - support both class and data-attribute */
  html[data-theme="dark"] .sun-icon,
  html.dark .sun-icon {
    transform: translateY(100%) rotate(50deg);
    opacity: 0;
  }
  
  html:not([data-theme="dark"]):not(.dark) .moon-icon {
    transform: translateY(-100%) rotate(-50deg);
    opacity: 0;
  }
  
  html[data-theme="dark"] .moon-icon,
  html.dark .moon-icon {
    transform: translateY(0) rotate(0);
    opacity: 1;
  }
  
  html:not([data-theme="dark"]):not(.dark) .sun-icon {
    transform: translateY(0) rotate(0);
    opacity: 1;
  }
  
  .sun-icon :global(svg) {
    fill: currentColor;
    color: #000000;
    transition: transform 0.3s ease;
  }
  
  .moon-icon :global(svg) {
    fill: currentColor;
    color: #ffffff;
    transition: transform 0.3s ease;
  }
</style>

<script>
  // Initialize theme toggle functionality
  function initThemeToggle() {
    const toggleButton = document.getElementById("themeToggle");
    
    if (!toggleButton) return;
    
    const handleToggleClick = () => {
      // Get current theme
      const currentTheme = document.documentElement.getAttribute('data-theme') || 'light';
      // Toggle theme
      const newTheme = currentTheme === 'light' ? 'dark' : 'light';
      
      // Update HTML attributes
      document.documentElement.setAttribute('data-theme', newTheme);
      document.documentElement.style.colorScheme = newTheme;
      
      // Also toggle class for backward compatibility
      if (newTheme === 'dark') {
        document.documentElement.classList.add('dark');
        document.body.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
        document.body.classList.remove('dark');
      }
      
      // Save to localStorage
      localStorage.setItem('theme', newTheme);
    };
    
    // Remove any existing event listeners to prevent duplicates
    const newToggleButton = toggleButton.cloneNode(true);
    if (toggleButton.parentNode) {
      toggleButton.parentNode.replaceChild(newToggleButton, toggleButton);
      newToggleButton.addEventListener("click", handleToggleClick);
    }
  }

  // Run on initial page load
  document.addEventListener('DOMContentLoaded', initThemeToggle);
  
  // Run on every Astro page transition
  document.addEventListener('astro:page-load', initThemeToggle);
</script>
